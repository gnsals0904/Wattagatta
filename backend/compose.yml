services: # 실행하 ㄹ서비스들 정의
  spring: # spring boot 어플리케이션 서비스
    env_file: .env
    container_name: spring
#    build: # 도커 이미지 빌드 설정
#      context: . # 도커파일 위치한 디렉토리(현재 위치)
#      dockerfile: Dockerfile
    image: chris429/wattagatta-back
    ports: # 호스트-컨테이너 포트 매핑
      - "8081:8080" # 아마 8080은 지금 내 컴퓨터든 ec2든 쓰이고 있을 것
#    environment: # mysql 환경변수 설정 - 밑에서 했는데 여기서 또 하면 뭐가 다른...가?
#      MYSQL_DATABASE: ${MYSQL_DATABASE}
#      MYSQL_USERNAME: ${MYSQL_USERNAME}
#      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    depends_on: # 헬스체크를 통과해야 시작하도록
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
  mysql: # mysql db 서비스
    container_name: mysql
    image: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping" ] # mysqladmin으로 데이터베이스 연결 상태 확인
      interval: 5s # 안되면 5초에 한 번씩 10번 시도
      retries: 10
    volumes:
      - ./mysql_data:/var/lib/mysql
  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ] # redis-cli로 redis 서버 응답 확인
      interval: 5s
      retries: 10